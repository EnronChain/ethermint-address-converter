!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("crypto-addr-codec"),require("bech32")):"function"==typeof define&&define.amd?define(["exports","crypto-addr-codec","bech32"],r):r((e||self).ethermintAddressConverter={},e.cryptoAddrCodec,e.bech32)}(this,function(e,r,o){const d={decoder:e=>{const o=r.stripHexPrefix(e);if(!r.isValidChecksumAddress(e,null)&&o!==o.toLowerCase()&&o!==o.toUpperCase())throw Error("Invalid address checksum");return Buffer.from(r.stripHexPrefix(e),"hex")},encoder:e=>r.toChecksumAddress(e.toString("hex"),null),name:"ETH"},t={decoder:e=>{const{prefix:r,words:d}=o.decode(e);if("ethm"!==r)throw Error("Unrecognised address format");return Buffer.from(o.fromWords(d))},encoder:e=>o.encode("ethm",o.toWords(e)),name:"ETHERMINT"};e.ETH=d,e.ETHERMINT=t,e.ethToEthermint=e=>{let r=d.decoder(e);return t.encoder(r)},e.ethermintToEth=e=>{let r=t.decoder(e);return d.encoder(r)}});
//# sourceMappingURL=converter.umd.js.map
